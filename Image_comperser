from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from PIL import Image
import os

# Replace with your Bot Token from BotFather
BOT_TOKEN = "7221204608:AAFK1kwcoB4TFueDV_cCCgcT0IQorU9y4m8"

# Store quality values for each user
user_quality = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "Send me a number for quality (1-95), then send an image.\nExample: 50"
    )

async def set_quality(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        q = int(update.message.text)
        if 1 <= q <= 95:
            user_quality[update.effective_user.id] = q
            await update.message.reply_text(f"Compression quality set to {q}. Now send me an image.")
        else:
            await update.message.reply_text("Please send a number between 1 and 95.")
    except ValueError:
        await update.message.reply_text("Invalid number. Please send a valid quality value.")

async def compress_image(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in user_quality:
        await update.message.reply_text("Please send me a quality value (1-95) first.")
        return

    quality = user_quality[user_id]
    photo = await update.message.photo[-1].get_file()
    input_path = f"input_{user_id}.jpg"
    output_path = f"output_{user_id}.jpg"

    await photo.download_to_drive(input_path)

    # Compress the image
    img = Image.open(input_path)
    img.save(output_path, quality=quality, optimize=True)

    await update.message.reply_document(document=open(output_path, "rb"))

    # Clean up
    os.remove(input_path)
    os.remove(output_path)

if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, set_quality))
    app.add_handler(MessageHandler(filters.PHOTO, compress_image))

    print("Bot is running...")
    app.run_polling()
